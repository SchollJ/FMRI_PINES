{"title":"Run fmriprep in CRNL cluster","markdown":{"yaml":{"title":"Run fmriprep in CRNL cluster","author":"Anastasios Dadiotis","editor":"visual","toc":true,"format":{"html":{"code-tools":true,"self-contained":true}}},"headingText":"Set up","containsRefs":false,"markdown":"\n\nIn this preliminary step we setup and define our variables. Note from the code below, change the variable “subject” to the subject you are working on. The Tiger notation is C for controls and G for Gamblers, e.g. for the first control subject the notation is C01 and for the first gambler G01. The following procedure is to submit the job for one subject. (to be updated for more).\n\n``` bash\n# Standard variable for the Tiger study\nWD=/crnldata/psyr2/Anastasios/Tiger_fmri\nmy_study=Tiger\nsession_name=S01\n\n# change this to the subject you are working on\nsubject=XXX \n```\n\n# Submit the job\n\nRun the following code to submit the job to the cluster. This is for one subject only. There are scripts for multiple subjects via Slurm array jobs. (To be updated)\n\nNeed step3 (see Bids) to be done ; mriqc is optional. To use fmap to make SDC, json files of fmap have to be change. See comment in step5_fmriprep.sh\n\n``` bash\n# Modify the 3 *.son files in the fmap directory\n\n# To add the \"IntendedFor\" field in the json files of the fieldmaps run the following command\nchmod -R 770 /crnldata/psyr2/Anastasios/Tiger_fmri/Tiger/data/bids/${subject}/ses-S01/fmap/ # This is extremelly important to have the right to write in the directory\n\n\ncd ${WD}/${my_study}/code\npython3 add_IntendedFor_Fieldmaps.py ${subject} # it is a very light job so i will run it in the frontal node instead of assigning it to other nodes. \n\n\n# Submit the job for one subject (to launch the job for a list of subjects, see the optional section at the end of this tutorial)\ncd ${WD}/${my_study}/code\nchmod -R 770 .\nchmod -R 770 ${WD}/${my_study}/data/bids/derivatives\nchmod -R 770 ${WD}/${my_study}/data/bids/derivatives/freesurfer-7.1.1 # to check \n\ncd ${WD}/${my_study}/code\nsbatch step5_fmriprep.sh ${subject} ${session_name} ${WD} ${my_study}\n```\n\n# Scripts\n\n### fmriprep\n\n``` {.bash filename=\"step5_fmriprep.sh\" code-line-numbers=\"true\" code-fold=\"true\"}\n#!/bin/bash\n\n#################################################\n### Original script from Arnaud Fournel, PhD, NeuroPop team, CRNL, Lyon\n### arnaud.fournel @ inserm.fr\n### and from \n### https://fmriprep.org/en/stable/singularity.html#running-singularity-on-a-slurm-system\n### \n### Adapted for the CRNL \n### by Gaelle Leroux, PhD\n### and Isabelle Faillenot, PhD\n###\n### Fall 2020, Lyon\n### gaelle.leroux @ cnrs.fr\n###\n### launched by: sbatch step5_fmriprep.sh ${subject} ${session_name} ${WD} ${my_study}\n###\n###############################\n#\n### The SBATCH directives (line 40 to be revised only):\n\n### Your job name displayed by the queue\n### use squeue command in a terminal to see it\n#SBATCH --job-name=fmriPrep\n\n### Specify output and error files\n### %A for job array's master job allocation number\n### or %a for job array ID (index) number\n#SBATCH --output=out_fmriPrep_%A.log\n#SBATCH --error=err_fmriPrep_%A.log\n\n### Specify the number of tasks, CPU per task and buffer size to be us\n#SBATCH --nodes=1\n#SBATCH --ntasks=1\n#SBATCH --cpus-per-task=16\n### Changed the memory to 100G to avoid the code 137\n#SBATCH --mem=100G\n\n### Send email for which step: NONE, BEGIN, END, FAIL, REQUEUE, ALL\n#SBATCH --mail-type=ALL\n#SBATCH --mail-user=${firstName}.${lastName}@univ-lyon1.fr\n\n### The size of the participant table to be run\n###SBATCH --array=1-1\n\n### If you want to launch your script on a specific node of the cluser\n### If yes, uncomment the appropriate line(s) \n#SBATCH --exclude=node10\n###SBATCH --nodelist=node9\n\n# End of the SBATCH directives\n###############################\n#\n# Paths of the study\nsubject=$1\nsession_name=$2\nWD=$3\nmy_study=$4\nSTUDY=${WD}/${my_study}\nDATA_DIRECTORY=\"${STUDY}/data\"\n#\nFMRIPREP_SINGULARITY_IMG=\"/mnt/data/soft/Images/fmriprep_23.2.1.sif\"\n#\n## Comment: Parse the participants.tsv file and extract one subject ID from the line corresponding to this SLURM task.\n## Comment: 1 line below to uncomment if you want to launch the script for all the subjects listed in ${DATA_DIRECTORY}/participants.tsv\n#subject=$( sed -n -E \"$((${SLURM_ARRAY_TASK_ID} + 1))s/sub-(\\S*)\\>.*/\\1/gp\" ${DATA_DIRECTORY}/participants.tsv )\n#\n# Definition of FreeSurfer env variables\nFREESURFER_HOME=${DATA_DIRECTORY}/bids/derivatives/freesurfer-7.1.1\nSINGULARITYENV_FREESURFER_HOME=${DATA_DIRECTORY}/bids/derivatives/freesurfer-7.1.1\n#\nSUBJECTS_DIR=${DATA_DIRECTORY}/bids/derivatives/freesurfer-7.1.1/subjects\nSINGULARITYENV_SUBJECTS_DIR=${DATA_DIRECTORY}/bids/derivatives/freesurfer-7.1.1/subjects\n#\nFS_LICENSE=${DATA_DIRECTORY}/bids/derivatives/freesurfer-7.1.1/license.txt\nSINGULARITYENV_FS_LICENSE=${DATA_DIRECTORY}/bids/derivatives/freesurfer-7.1.1/license.txt # Tells fMRIPrep the mount point\n#\nLOCAL_FREESURFER_DIR=${DATA_DIRECTORY}/bids/derivatives/freesurfer-7.1.1\n#\n# Prepare some writeable bind-mount points.\nTEMPLATEFLOW_HOME=${HOME}/.cache/templateflow\nSINGULARITYENV_TEMPLATEFLOW_HOME=${HOME}/.cache/templateflow # Tells fMRIPrep the mount point\nFMRIPREP_CACHE=${HOME}/.cache/fmriprep\nSINGULARITYENV_FMRIPREP_CACHE=${HOME}/.cache/fmriprep  # Tells fMRIPrep the mount point\nmkdir -p ${TEMPLATEFLOW_HOME}\nmkdir -p ${FMRIPREP_CACHE}\nmkdir -p ${DATA_DIRECTORY}/codes\n#\n###############################\n# To be printed in the out_fmriPrep_*.log file :\necho \"#########################################################################\"\necho \"USER:\" $USER\necho \"#\"\necho \"SLURM_SUBMITING_DIRECTORY:\" $SLURM_SUBMIT_DIR\necho \"SLURM_JOB_NODELIST:\" $SLURM_NODELIST\necho \"SLURM_JOB_NAME:\" $SLURM_JOB_NAME\necho \"SLURM_JOB_ID:\" $SLURM_JOBID\necho \"SLURM_ARRAY_TASK_ID:\" $SLURM_ARRAY_TASK_ID\necho \"SLURM_NTASKS:\" $SLURM_NTASKS\necho \"#\"\necho \"Step 5: fmriPrep is a preprocessing pipeline of fMRI data\"\necho \"#\"\necho \"Subject processed:\" ${subject}\necho \"Session processed:\" ${session_name}\necho \"#\"\necho \"Job STARTED @ $(date)\"\necho \"#\"\n#\n# PRE-REQUISTES: a dataset organised according to BIDS standards (using HeuDiConv or another tool).\n# Submission to slurm and running a singularity image fo fmriPrep \n# Compose the command line\n# options:\n#   --use-aroma  \\\t\t\t\tto use ICA-aroma to separarte noise from signal (cf prium15)\n#   --use-syn-sdc \\\t\t\t\tto have SDC but without fmap images\n#   --fd-spike-threshold 0.3 \\\tto change the FD threshold to calculate motion_outliers (default = 0.5)\n#   --output-spaces MNI152NLin2009cSym:res-1 \\\tto use a symetric template (available only in a cubic resolution of 1mm)\n# if you have fmap acquisition, and if you want to use them for the SDC : \n# in the files :data/bids/sub-XX/ses-ZZZ/*magnitude1.json + *magnitude2.json + *_phasediff.json\n# add at the end : \n# \"IntendedFor\": [\"ses-IRM/func/sub-XX_ses-ZZZ_task-YY_bold.nii.gz\",\n#                   \"ses-IRM/func/sub-XX_ses-ZZZ_task-YY_bold.nii.gz\"]\n#\ncmd=\"srun singularity run \\\n\t--cleanenv \\\n\t--bind ${DATA_DIRECTORY}:/data --bind ${LOCAL_FREESURFER_DIR}:/fsdir \\\n\t${FMRIPREP_SINGULARITY_IMG} \\\n\t/data/bids /data/bids/derivatives/fmriprep participant \\\n\t--participant-label ${subject} \\\n\t--work-dir /data/codes \\\n\t--low-mem \\\n\t--stop-on-first-crash \\\n\t--write-graph \\\n\t--fs-license-file /fsdir/license.txt --fs-subjects-dir /fsdir\"\n#\n# Setup done, run the command\necho Running task ${SLURM_ARRAY_TASK_ID}\necho \"Command line used (example of the last subject processed)\"\necho $cmd\n#\necho \"#\"\n#\neval $cmd\nexitcode=$?\n#\necho \"#\"\necho \"Job STOPPED @ $(date)\"\necho \"#\"\necho \"If fmriPrep successful: it is clearly indicated in the out*.log file as\" \necho \"[...] fMRIPrep finished successfully! [...] otherwise, problem(s) occured.\"\necho \"############################################################################################\"\necho \"#\"\n# Output results to a table\n# code 137 : raise the --mem SBATCH directive\necho \"sub-${subject}\t${SLURM_ARRAY_TASK_ID}\t$exitcode\" >> ${SLURM_JOB_NAME}.step5.${SLURM_ARRAY_JOB_ID}.tsv\necho Finished tasks ${SLURM_ARRAY_TASK_ID} with exit code $exitcode\nexit $exitcode\n```\n\n\n### fieldmaps\n\n``` {.python filename=\"add_IntendedFor_Fieldmaps.py\" code-line-numbers=\"true\" code-fold=\"true\"}\n\"\"\"\nTitle: Script to add IntendedFor field to the json files of the fieldmaps\nAuthor: Anastasios Dadiotis\nDate created: 15/04/2024\nDate last modified: 15/04/2024\nDescription: This script will add the IntendedFor field to the json files of the fieldmaps. The IntendedFor field is a list of the functional images that the fieldmap is intended for. \nThis is recommended for the BIDS format but is necessary to Fieldmap correct within FMRIprep. \n\"\"\"\n\"\"\"\nUsage: This script is called from the bash with the following command:\npython add_IntendedFor_Fieldmaps.py ${subject}\nwhere subject is the participant id.\nNote: Before running the script make sure that you have rights to write in the directory where the json files are located.\nif not, you can change the permissions with the following command:\nchmod -R 770 /path/to/directory\n\"\"\"\n\n\n# Import the necessary libraries\nimport json\nimport os\nimport sys\n\n# Participants id from the bash script\nid = sys.argv[1]\n\n# Define the directory path\n#directory_path = f'/Volumes/psyr2/Anastasios/Tiger_fmri/Tiger/data/bids/sub-{id}/ses-S01/fmap'\ndirectory_path = f'/crnldata/psyr2/Anastasios/Tiger_fmri/Tiger/data/bids/sub-{id}/ses-S01/fmap'\n# load the json files of the fieldmaps\njson_files = [f for f in os.listdir(directory_path) if f.endswith('.json') and \"._\" not in f]\n\n# create the list of scans for the IntendedFor field\nIntendedFor = []\ntasks = [\"BigBuckBunny\", \"Hariri\", \"PartlyCloudy\", \"SkewedGambling\"]\n\n# loop over tasks, runs and echoes to create the list of scans for the IntendedFor field\nfor task in tasks:\n    if task != \"SkewedGambling\":\n        for echo in range (1,4):\n            IntendedFor.append(f\"ses-S01/func/sub-{id}_ses-S01_task-{task}_echo-{echo}_bold.nii.gz\")\n    elif task == \"SkewedGambling\":\n        for run in range(1,4):\n            for echo in range (1,4):\n                IntendedFor.append(f\"ses-S01/func/sub-{id}_ses-S01_task-{task}_run-0{run}_echo-{echo}_bold.nii.gz\")\n    else:\n        print(\"Error in the task name\")\n   \n\n    \n# loop over the json files and add the IntendedFor field\nfor json_file in json_files:\n    json_file_path = f'{directory_path}/{json_file}'\n    with open(json_file_path, 'r') as file:\n        data = json.load(file)\n        data[\"IntendedFor\"] = IntendedFor\n        with open(json_file_path, 'w') as file:\n            json.dump(data, file, indent=4)       \n```\n\n\n\n\n\n\n\n","srcMarkdownNoYaml":"\n\n# Set up \nIn this preliminary step we setup and define our variables. Note from the code below, change the variable “subject” to the subject you are working on. The Tiger notation is C for controls and G for Gamblers, e.g. for the first control subject the notation is C01 and for the first gambler G01. The following procedure is to submit the job for one subject. (to be updated for more).\n\n``` bash\n# Standard variable for the Tiger study\nWD=/crnldata/psyr2/Anastasios/Tiger_fmri\nmy_study=Tiger\nsession_name=S01\n\n# change this to the subject you are working on\nsubject=XXX \n```\n\n# Submit the job\n\nRun the following code to submit the job to the cluster. This is for one subject only. There are scripts for multiple subjects via Slurm array jobs. (To be updated)\n\nNeed step3 (see Bids) to be done ; mriqc is optional. To use fmap to make SDC, json files of fmap have to be change. See comment in step5_fmriprep.sh\n\n``` bash\n# Modify the 3 *.son files in the fmap directory\n\n# To add the \"IntendedFor\" field in the json files of the fieldmaps run the following command\nchmod -R 770 /crnldata/psyr2/Anastasios/Tiger_fmri/Tiger/data/bids/${subject}/ses-S01/fmap/ # This is extremelly important to have the right to write in the directory\n\n\ncd ${WD}/${my_study}/code\npython3 add_IntendedFor_Fieldmaps.py ${subject} # it is a very light job so i will run it in the frontal node instead of assigning it to other nodes. \n\n\n# Submit the job for one subject (to launch the job for a list of subjects, see the optional section at the end of this tutorial)\ncd ${WD}/${my_study}/code\nchmod -R 770 .\nchmod -R 770 ${WD}/${my_study}/data/bids/derivatives\nchmod -R 770 ${WD}/${my_study}/data/bids/derivatives/freesurfer-7.1.1 # to check \n\ncd ${WD}/${my_study}/code\nsbatch step5_fmriprep.sh ${subject} ${session_name} ${WD} ${my_study}\n```\n\n# Scripts\n\n### fmriprep\n\n``` {.bash filename=\"step5_fmriprep.sh\" code-line-numbers=\"true\" code-fold=\"true\"}\n#!/bin/bash\n\n#################################################\n### Original script from Arnaud Fournel, PhD, NeuroPop team, CRNL, Lyon\n### arnaud.fournel @ inserm.fr\n### and from \n### https://fmriprep.org/en/stable/singularity.html#running-singularity-on-a-slurm-system\n### \n### Adapted for the CRNL \n### by Gaelle Leroux, PhD\n### and Isabelle Faillenot, PhD\n###\n### Fall 2020, Lyon\n### gaelle.leroux @ cnrs.fr\n###\n### launched by: sbatch step5_fmriprep.sh ${subject} ${session_name} ${WD} ${my_study}\n###\n###############################\n#\n### The SBATCH directives (line 40 to be revised only):\n\n### Your job name displayed by the queue\n### use squeue command in a terminal to see it\n#SBATCH --job-name=fmriPrep\n\n### Specify output and error files\n### %A for job array's master job allocation number\n### or %a for job array ID (index) number\n#SBATCH --output=out_fmriPrep_%A.log\n#SBATCH --error=err_fmriPrep_%A.log\n\n### Specify the number of tasks, CPU per task and buffer size to be us\n#SBATCH --nodes=1\n#SBATCH --ntasks=1\n#SBATCH --cpus-per-task=16\n### Changed the memory to 100G to avoid the code 137\n#SBATCH --mem=100G\n\n### Send email for which step: NONE, BEGIN, END, FAIL, REQUEUE, ALL\n#SBATCH --mail-type=ALL\n#SBATCH --mail-user=${firstName}.${lastName}@univ-lyon1.fr\n\n### The size of the participant table to be run\n###SBATCH --array=1-1\n\n### If you want to launch your script on a specific node of the cluser\n### If yes, uncomment the appropriate line(s) \n#SBATCH --exclude=node10\n###SBATCH --nodelist=node9\n\n# End of the SBATCH directives\n###############################\n#\n# Paths of the study\nsubject=$1\nsession_name=$2\nWD=$3\nmy_study=$4\nSTUDY=${WD}/${my_study}\nDATA_DIRECTORY=\"${STUDY}/data\"\n#\nFMRIPREP_SINGULARITY_IMG=\"/mnt/data/soft/Images/fmriprep_23.2.1.sif\"\n#\n## Comment: Parse the participants.tsv file and extract one subject ID from the line corresponding to this SLURM task.\n## Comment: 1 line below to uncomment if you want to launch the script for all the subjects listed in ${DATA_DIRECTORY}/participants.tsv\n#subject=$( sed -n -E \"$((${SLURM_ARRAY_TASK_ID} + 1))s/sub-(\\S*)\\>.*/\\1/gp\" ${DATA_DIRECTORY}/participants.tsv )\n#\n# Definition of FreeSurfer env variables\nFREESURFER_HOME=${DATA_DIRECTORY}/bids/derivatives/freesurfer-7.1.1\nSINGULARITYENV_FREESURFER_HOME=${DATA_DIRECTORY}/bids/derivatives/freesurfer-7.1.1\n#\nSUBJECTS_DIR=${DATA_DIRECTORY}/bids/derivatives/freesurfer-7.1.1/subjects\nSINGULARITYENV_SUBJECTS_DIR=${DATA_DIRECTORY}/bids/derivatives/freesurfer-7.1.1/subjects\n#\nFS_LICENSE=${DATA_DIRECTORY}/bids/derivatives/freesurfer-7.1.1/license.txt\nSINGULARITYENV_FS_LICENSE=${DATA_DIRECTORY}/bids/derivatives/freesurfer-7.1.1/license.txt # Tells fMRIPrep the mount point\n#\nLOCAL_FREESURFER_DIR=${DATA_DIRECTORY}/bids/derivatives/freesurfer-7.1.1\n#\n# Prepare some writeable bind-mount points.\nTEMPLATEFLOW_HOME=${HOME}/.cache/templateflow\nSINGULARITYENV_TEMPLATEFLOW_HOME=${HOME}/.cache/templateflow # Tells fMRIPrep the mount point\nFMRIPREP_CACHE=${HOME}/.cache/fmriprep\nSINGULARITYENV_FMRIPREP_CACHE=${HOME}/.cache/fmriprep  # Tells fMRIPrep the mount point\nmkdir -p ${TEMPLATEFLOW_HOME}\nmkdir -p ${FMRIPREP_CACHE}\nmkdir -p ${DATA_DIRECTORY}/codes\n#\n###############################\n# To be printed in the out_fmriPrep_*.log file :\necho \"#########################################################################\"\necho \"USER:\" $USER\necho \"#\"\necho \"SLURM_SUBMITING_DIRECTORY:\" $SLURM_SUBMIT_DIR\necho \"SLURM_JOB_NODELIST:\" $SLURM_NODELIST\necho \"SLURM_JOB_NAME:\" $SLURM_JOB_NAME\necho \"SLURM_JOB_ID:\" $SLURM_JOBID\necho \"SLURM_ARRAY_TASK_ID:\" $SLURM_ARRAY_TASK_ID\necho \"SLURM_NTASKS:\" $SLURM_NTASKS\necho \"#\"\necho \"Step 5: fmriPrep is a preprocessing pipeline of fMRI data\"\necho \"#\"\necho \"Subject processed:\" ${subject}\necho \"Session processed:\" ${session_name}\necho \"#\"\necho \"Job STARTED @ $(date)\"\necho \"#\"\n#\n# PRE-REQUISTES: a dataset organised according to BIDS standards (using HeuDiConv or another tool).\n# Submission to slurm and running a singularity image fo fmriPrep \n# Compose the command line\n# options:\n#   --use-aroma  \\\t\t\t\tto use ICA-aroma to separarte noise from signal (cf prium15)\n#   --use-syn-sdc \\\t\t\t\tto have SDC but without fmap images\n#   --fd-spike-threshold 0.3 \\\tto change the FD threshold to calculate motion_outliers (default = 0.5)\n#   --output-spaces MNI152NLin2009cSym:res-1 \\\tto use a symetric template (available only in a cubic resolution of 1mm)\n# if you have fmap acquisition, and if you want to use them for the SDC : \n# in the files :data/bids/sub-XX/ses-ZZZ/*magnitude1.json + *magnitude2.json + *_phasediff.json\n# add at the end : \n# \"IntendedFor\": [\"ses-IRM/func/sub-XX_ses-ZZZ_task-YY_bold.nii.gz\",\n#                   \"ses-IRM/func/sub-XX_ses-ZZZ_task-YY_bold.nii.gz\"]\n#\ncmd=\"srun singularity run \\\n\t--cleanenv \\\n\t--bind ${DATA_DIRECTORY}:/data --bind ${LOCAL_FREESURFER_DIR}:/fsdir \\\n\t${FMRIPREP_SINGULARITY_IMG} \\\n\t/data/bids /data/bids/derivatives/fmriprep participant \\\n\t--participant-label ${subject} \\\n\t--work-dir /data/codes \\\n\t--low-mem \\\n\t--stop-on-first-crash \\\n\t--write-graph \\\n\t--fs-license-file /fsdir/license.txt --fs-subjects-dir /fsdir\"\n#\n# Setup done, run the command\necho Running task ${SLURM_ARRAY_TASK_ID}\necho \"Command line used (example of the last subject processed)\"\necho $cmd\n#\necho \"#\"\n#\neval $cmd\nexitcode=$?\n#\necho \"#\"\necho \"Job STOPPED @ $(date)\"\necho \"#\"\necho \"If fmriPrep successful: it is clearly indicated in the out*.log file as\" \necho \"[...] fMRIPrep finished successfully! [...] otherwise, problem(s) occured.\"\necho \"############################################################################################\"\necho \"#\"\n# Output results to a table\n# code 137 : raise the --mem SBATCH directive\necho \"sub-${subject}\t${SLURM_ARRAY_TASK_ID}\t$exitcode\" >> ${SLURM_JOB_NAME}.step5.${SLURM_ARRAY_JOB_ID}.tsv\necho Finished tasks ${SLURM_ARRAY_TASK_ID} with exit code $exitcode\nexit $exitcode\n```\n\n\n### fieldmaps\n\n``` {.python filename=\"add_IntendedFor_Fieldmaps.py\" code-line-numbers=\"true\" code-fold=\"true\"}\n\"\"\"\nTitle: Script to add IntendedFor field to the json files of the fieldmaps\nAuthor: Anastasios Dadiotis\nDate created: 15/04/2024\nDate last modified: 15/04/2024\nDescription: This script will add the IntendedFor field to the json files of the fieldmaps. The IntendedFor field is a list of the functional images that the fieldmap is intended for. \nThis is recommended for the BIDS format but is necessary to Fieldmap correct within FMRIprep. \n\"\"\"\n\"\"\"\nUsage: This script is called from the bash with the following command:\npython add_IntendedFor_Fieldmaps.py ${subject}\nwhere subject is the participant id.\nNote: Before running the script make sure that you have rights to write in the directory where the json files are located.\nif not, you can change the permissions with the following command:\nchmod -R 770 /path/to/directory\n\"\"\"\n\n\n# Import the necessary libraries\nimport json\nimport os\nimport sys\n\n# Participants id from the bash script\nid = sys.argv[1]\n\n# Define the directory path\n#directory_path = f'/Volumes/psyr2/Anastasios/Tiger_fmri/Tiger/data/bids/sub-{id}/ses-S01/fmap'\ndirectory_path = f'/crnldata/psyr2/Anastasios/Tiger_fmri/Tiger/data/bids/sub-{id}/ses-S01/fmap'\n# load the json files of the fieldmaps\njson_files = [f for f in os.listdir(directory_path) if f.endswith('.json') and \"._\" not in f]\n\n# create the list of scans for the IntendedFor field\nIntendedFor = []\ntasks = [\"BigBuckBunny\", \"Hariri\", \"PartlyCloudy\", \"SkewedGambling\"]\n\n# loop over tasks, runs and echoes to create the list of scans for the IntendedFor field\nfor task in tasks:\n    if task != \"SkewedGambling\":\n        for echo in range (1,4):\n            IntendedFor.append(f\"ses-S01/func/sub-{id}_ses-S01_task-{task}_echo-{echo}_bold.nii.gz\")\n    elif task == \"SkewedGambling\":\n        for run in range(1,4):\n            for echo in range (1,4):\n                IntendedFor.append(f\"ses-S01/func/sub-{id}_ses-S01_task-{task}_run-0{run}_echo-{echo}_bold.nii.gz\")\n    else:\n        print(\"Error in the task name\")\n   \n\n    \n# loop over the json files and add the IntendedFor field\nfor json_file in json_files:\n    json_file_path = f'{directory_path}/{json_file}'\n    with open(json_file_path, 'r') as file:\n        data = json.load(file)\n        data[\"IntendedFor\"] = IntendedFor\n        with open(json_file_path, 'w') as file:\n            json.dump(data, file, indent=4)       \n```\n\n\n\n\n\n\n\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"markdown"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":true,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["styles.css"],"toc":true,"self-contained":true,"output-file":"run_fmriprep.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.5.57","theme":"cosmo","title":"Run fmriprep in CRNL cluster","author":"Anastasios Dadiotis","editor":"visual"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}